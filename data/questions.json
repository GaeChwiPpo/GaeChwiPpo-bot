{
  "backend": {
    "database": [
      "데이터베이스 커넥션 풀이 왜 필요한가요? 실무에서 어떻게 설정하시나요?",
      "인덱스를 추가했는데 오히려 성능이 느려졌습니다. 가능한 원인은?",
      "트랜잭션 격리 레벨 중 READ COMMITTED와 REPEATABLE READ의 차이점은?",
      "데이터베이스 샤딩과 레플리케이션의 차이점을 설명해주세요.",
      "N+1 쿼리 문제란 무엇이고 어떻게 해결하나요?",
      "데이터베이스 정규화의 장단점은 무엇인가요?",
      "NoSQL과 RDBMS를 어떤 기준으로 선택하시나요?",
      "데이터베이스 인덱스의 내부 동작 원리를 설명해주세요.",
      "트랜잭션의 ACID 속성을 각각 설명해주세요.",
      "데이터베이스 락(Lock)의 종류와 차이점은?",
      "Slow Query를 최적화하는 방법들을 설명해주세요.",
      "데이터베이스 파티셔닝 전략에는 어떤 것들이 있나요?",
      "캐시와 데이터베이스 간 일관성을 유지하는 방법은?",
      "데이터베이스 백업 전략을 어떻게 수립하시나요?",
      "ORM을 사용할 때의 장단점은 무엇인가요?",
      "데이터베이스 마이그레이션 전략을 설명해주세요.",
      "인덱스 힌트(Index Hint)는 언제 사용하나요?",
      "복합 인덱스 설계 시 고려사항은?",
      "데이터베이스 통계 정보가 중요한 이유는?",
      "Covering Index란 무엇이고 어떤 장점이 있나요?",
      "데이터베이스 옵티마이저의 동작 원리는?",
      "Deadlock이 발생하는 원인과 해결 방법은?",
      "데이터베이스 페이징 처리 Best Practice는?",
      "대용량 데이터 삭제 시 주의사항은?",
      "데이터베이스 버퍼 풀의 역할과 튜닝 방법은?",
      "Materialized View의 사용 사례와 주의점은?",
      "데이터베이스 파티션 프루닝(Partition Pruning)이란?",
      "온라인 DDL과 오프라인 DDL의 차이점은?",
      "데이터베이스 Vacuum 작업이 필요한 이유는?",
      "Query Plan을 읽고 분석하는 방법은?",
      "데이터베이스 Connection Leak을 방지하는 방법은?",
      "읽기 전용 복제본 활용 전략은?",
      "데이터베이스 암호화 방법과 성능 영향은?",
      "Prepared Statement의 장점과 사용 방법은?",
      "데이터베이스 모니터링 주요 지표들은?",
      "인덱스 리빌드가 필요한 시점은?",
      "데이터베이스 스키마 버전 관리 방법은?",
      "Full Table Scan이 유리한 경우는?",
      "데이터베이스 아카이빙 전략은?",
      "Hot Spot을 방지하는 방법은?",
      "데이터베이스 클러스터링 인덱스란?",
      "Write Amplification 문제와 해결 방법은?",
      "데이터베이스 체크포인트(Checkpoint)의 역할은?",
      "Phantom Read 현상과 해결 방법은?",
      "데이터베이스 힌트 사용의 장단점은?",
      "Batch Insert 최적화 방법은?",
      "데이터베이스 로그 파일 관리 전략은?",
      "인메모리 데이터베이스의 사용 사례는?",
      "데이터베이스 압축의 장단점은?",
      "Multi-Version Concurrency Control(MVCC)이란?"
    ],
    "api": [
      "API 응답 시간이 5초 걸립니다. 어떤 순서로 체크하시겠습니까?",
      "REST API와 GraphQL의 장단점을 비교해주세요.",
      "API 버전 관리 전략에는 어떤 것들이 있나요?",
      "Rate Limiting은 왜 필요하고 어떻게 구현하나요?",
      "JWT vs Session 기반 인증의 차이점은?",
      "API Gateway의 역할과 필요성을 설명해주세요.",
      "RESTful API 설계 원칙을 설명해주세요.",
      "API 보안을 위한 방법들을 설명해주세요.",
      "Webhook과 Polling의 차이점과 사용 사례는?",
      "API 문서화를 어떻게 관리하시나요?",
      "CORS 에러가 발생하는 이유와 해결 방법은?",
      "API 응답 캐싱 전략을 설명해주세요.",
      "Idempotency(멱등성)가 중요한 이유는 무엇인가요?",
      "API 에러 처리 Best Practice는?",
      "gRPC와 REST API의 차이점은?",
      "API Throttling과 Rate Limiting의 차이는?",
      "API 모니터링에서 중요한 메트릭들은?",
      "Pagination 구현 방법들과 장단점은?",
      "API 테스트 자동화 전략은?",
      "Batch API 설계 시 고려사항은?",
      "API 응답 압축 방법과 효과는?",
      "Long Polling vs WebSocket vs SSE 비교",
      "API 타임아웃 설정 Best Practice는?",
      "API 리트라이 전략은 어떻게 구현하나요?",
      "API 서비스 디스커버리 방법들은?",
      "API 로깅에서 주의해야 할 점은?",
      "API 계약 테스트(Contract Testing)란?",
      "API 응답 포맷 표준화 방법은?",
      "API 클라이언트 SDK 설계 원칙은?",
      "API 마이그레이션 전략은?",
      "Async API 설계 패턴들은?",
      "API 부하 테스트 방법과 도구는?",
      "API 보안 스캔 도구와 사용법은?",
      "API Rate Limit 우회 방지 방법은?",
      "API 응답 시간 최적화 방법들은?",
      "API 버전별 호환성 유지 방법은?",
      "API 사용량 측정 및 과금 시스템 설계는?",
      "API 캐시 무효화 전략은?",
      "API 요청 유효성 검증 Best Practice는?",
      "API 응답 필터링과 필드 선택 구현은?",
      "API 접근 권한 관리 시스템 설계는?",
      "API 모킹(Mocking) 도구와 활용법은?",
      "API 성능 프로파일링 방법은?",
      "API 장애 복구 시나리오는?",
      "API 데이터 변환 레이어 설계는?",
      "API 요청 추적(Request Tracing) 구현은?",
      "API 보안 헤더 설정 Best Practice는?",
      "API 응답 코드 설계 가이드라인은?",
      "API 클라이언트 재시도 로직 구현은?",
      "API 서비스 메시 통합 방법은?"
    ],
    "architecture": [
      "마이크로서비스 vs 모놀리식, 언제 무엇을 선택하나요?",
      "이벤트 드리븐 아키텍처의 장단점은?",
      "CQRS 패턴은 언제 사용하면 좋을까요?",
      "서킷 브레이커 패턴을 설명하고 언제 사용하나요?",
      "캐시 전략 중 Cache-Aside vs Write-Through의 차이는?",
      "DDD(Domain Driven Design)의 핵심 개념들을 설명해주세요.",
      "헥사고날 아키텍처의 장점은 무엇인가요?",
      "서비스 메시(Service Mesh)가 필요한 이유는?",
      "Saga 패턴으로 분산 트랜잭션을 어떻게 처리하나요?",
      "Event Sourcing의 장단점은 무엇인가요?",
      "마이크로서비스 간 통신 방법들을 비교해주세요.",
      "무중단 배포를 위한 전략들을 설명해주세요.",
      "확장성 있는 시스템 설계의 원칙은?",
      "CAP 정리를 설명하고 실무 적용 사례를 들어주세요.",
      "서버리스 아키텍처의 장단점은?",
      "레이어드 아키텍처의 각 계층 역할은?",
      "클린 아키텍처의 핵심 원칙들은?",
      "BFF(Backend for Frontend) 패턴의 사용 사례는?",
      "마이크로서비스 데이터 일관성 유지 방법은?",
      "분산 시스템에서의 로깅 전략은?",
      "아키텍처 결정 기록(ADR) 작성 방법은?",
      "Strangler Fig 패턴으로 레거시 마이그레이션하는 방법은?",
      "멀티테넌시 아키텍처 설계 방법은?",
      "이벤트 스토밍 진행 방법과 효과는?",
      "아키텍처 피트니스 함수란?",
      "컨테이너 오케스트레이션의 필요성은?",
      "분산 트레이싱 구현 방법은?",
      "아키텍처 리팩토링 전략은?",
      "Bounded Context 식별 방법은?",
      "Anti-Corruption Layer의 역할은?",
      "폴리글랏 퍼시스턴스 전략은?",
      "서비스 간 의존성 관리 방법은?",
      "분산 시스템에서의 시간 동기화 문제는?",
      "아키텍처 거버넌스 수립 방법은?",
      "Evolutionary Architecture의 특징은?",
      "마이크로서비스 테스트 전략은?",
      "API 조합 패턴 vs 이벤트 소싱 비교",
      "분산 캐시 아키텍처 설계는?",
      "서비스 버전 관리 전략은?",
      "아키텍처 복잡도 측정 방법은?",
      "Sidecar 패턴의 활용 사례는?",
      "분산 시스템에서의 보안 고려사항은?",
      "아키텍처 문서화 Best Practice는?",
      "모듈러 모놀리스의 장단점은?",
      "서비스 분리 기준과 원칙은?",
      "아키텍처 기술 부채 관리 방법은?",
      "클라우드 네이티브 아키텍처 원칙은?",
      "아키텍처 성숙도 평가 방법은?",
      "마이크로프론트엔드 아키텍처 설계는?",
      "분산 시스템 모니터링 아키텍처는?"
    ],
    "performance": [
      "애플리케이션 성능 측정 지표들을 설명해주세요.",
      "메모리 누수를 찾고 해결하는 방법은?",
      "로드 밸런싱 알고리즘들을 비교해주세요.",
      "성능 테스트 종류와 각각의 목적은?",
      "JVM 튜닝 경험이 있다면 설명해주세요.",
      "데이터베이스 쿼리 최적화 방법들은?",
      "CDN을 사용하는 이유와 장점은?",
      "애플리케이션 프로파일링 도구 사용 경험은?",
      "스레드 풀 크기를 어떻게 결정하나요?",
      "비동기 처리의 장단점과 사용 사례는?",
      "캐싱 전략과 캐시 무효화 방법은?",
      "대용량 트래픽 처리 경험과 방법은?",
      "성능 병목 지점을 찾는 방법은?",
      "Connection Pool 설정 방법과 고려사항은?",
      "배치 처리 vs 실시간 처리의 선택 기준은?",
      "CPU 바운드 vs I/O 바운드 작업 최적화 방법은?",
      "성능 모니터링 대시보드 구성 요소는?",
      "가비지 컬렉션 튜닝 방법은?",
      "네트워크 레이턴시 줄이는 방법들은?",
      "성능 테스트 시나리오 작성 방법은?",
      "메모리 사용량 최적화 기법들은?",
      "동시성 제어 메커니즘들을 비교해주세요.",
      "성능 SLA 설정 기준은?",
      "프로파일링 vs 트레이싱의 차이는?",
      "성능 회귀 테스트 자동화 방법은?",
      "리소스 풀링의 장단점은?",
      "성능 최적화 우선순위 결정 방법은?",
      "스트레스 테스트 vs 부하 테스트 차이는?",
      "성능 병목 현상 종류와 해결책은?",
      "캐시 히트율 향상 방법은?",
      "성능 예산(Performance Budget) 설정 방법은?",
      "데이터 압축이 성능에 미치는 영향은?",
      "성능 최적화와 가독성의 균형은?",
      "백프레셔(Backpressure) 처리 방법은?",
      "성능 측정 시 주의사항들은?",
      "코드 최적화 vs 인프라 최적화 선택 기준은?",
      "성능 테스트 환경 구축 방법은?",
      "실시간 성능 모니터링 도구들은?",
      "성능 이슈 디버깅 프로세스는?",
      "메모리 단편화 문제와 해결책은?",
      "성능 최적화 ROI 계산 방법은?",
      "동적 스케일링 전략은?",
      "성능 테스트 데이터 준비 방법은?",
      "컨테이너 환경에서의 성능 최적화는?",
      "성능 관련 로그 분석 방법은?",
      "벤치마크 테스트 수행 방법은?",
      "성능 최적화 체크리스트는?",
      "리소스 경합 해결 방법은?",
      "성능 튜닝 도구들의 사용법은?",
      "클라우드 환경 성능 최적화 특징은?"
    ],
    "devops": [
      "CI/CD 파이프라인 구축 경험을 설명해주세요.",
      "컨테이너와 가상머신의 차이점은?",
      "쿠버네티스의 주요 컴포넌트들을 설명해주세요.",
      "Infrastructure as Code의 장점은?",
      "모니터링과 로깅 전략을 어떻게 수립하나요?",
      "Blue-Green 배포와 Canary 배포의 차이는?",
      "Docker 이미지 최적화 방법들은?",
      "서비스 메시지 큐의 종류와 선택 기준은?",
      "오토스케일링 설정 경험과 고려사항은?",
      "장애 대응 프로세스를 설명해주세요.",
      "백업 및 복구 전략은 어떻게 수립하나요?",
      "보안 취약점 스캔을 어떻게 자동화하나요?",
      "로그 수집 및 분석 파이프라인 구축 경험은?",
      "서비스 디스커버리의 필요성과 구현 방법은?",
      "멀티 클라우드 전략의 장단점은?",
      "GitOps의 개념과 장점은?",
      "Helm Chart 작성 경험과 Best Practice는?",
      "컨테이너 레지스트리 관리 방법은?",
      "쿠버네티스 네트워킹 모델을 설명해주세요.",
      "CI/CD 파이프라인 보안 강화 방법은?",
      "인프라 모니터링 주요 메트릭들은?",
      "Terraform vs Ansible 사용 경험 비교",
      "쿠버네티스 리소스 관리 Best Practice는?",
      "배포 롤백 전략과 자동화 방법은?",
      "Secret 관리 도구와 사용 방법은?",
      "컨테이너 오케스트레이션 플랫폼 비교",
      "SRE 문화 도입 경험과 효과는?",
      "인시던트 관리 프로세스는?",
      "인프라 비용 최적화 방법들은?",
      "쿠버네티스 보안 Best Practice는?",
      "배포 파이프라인 성능 최적화 방법은?",
      "모니터링 알림 설정 기준은?",
      "인프라 자동화 테스트 방법은?",
      "서비스 메시 도입 경험과 효과는?",
      "컨테이너 런타임 비교와 선택 기준은?",
      "쿠버네티스 스토리지 관리 방법은?",
      "로그 보관 정책 수립 방법은?",
      "인프라 변경 관리 프로세스는?",
      "쿠버네티스 업그레이드 전략은?",
      "APM 도구 선택 기준과 활용법은?",
      "인프라 보안 감사 수행 방법은?",
      "배포 자동화 도구 비교와 선택은?",
      "쿠버네티스 트러블슈팅 경험은?",
      "인프라 재해 복구 계획 수립은?",
      "컨테이너 이미지 보안 스캔 방법은?",
      "인프라 성능 튜닝 경험은?",
      "쿠버네티스 RBAC 설정 방법은?",
      "로그 집계 및 분석 도구 선택은?",
      "인프라 문서화 자동화 방법은?",
      "배포 메트릭 수집 및 분석은?"
    ],
    "security": [
      "OWASP Top 10을 설명해주세요.",
      "SQL Injection을 방어하는 방법들은?",
      "XSS와 CSRF의 차이점과 방어 방법은?",
      "암호화와 해싱의 차이점은?",
      "OAuth 2.0의 플로우를 설명해주세요.",
      "API 키 관리 Best Practice는?",
      "보안 헤더들(Security Headers)의 종류와 역할은?",
      "Zero Trust 보안 모델을 설명해주세요.",
      "SSL/TLS 인증서의 동작 원리는?",
      "비밀번호 정책 수립 시 고려사항은?",
      "2FA(Two-Factor Authentication) 구현 방법은?",
      "보안 취약점 점검 도구들을 아는대로 설명해주세요.",
      "PII 데이터 처리 시 주의사항은?",
      "보안 사고 대응 절차를 설명해주세요.",
      "컨테이너 보안 Best Practice는?",
      "보안 코드 리뷰 체크리스트는?",
      "세션 관리 보안 Best Practice는?",
      "입력 값 검증 방법과 중요성은?",
      "보안 로깅과 모니터링 전략은?",
      "암호화 키 관리 방법은?",
      "보안 테스트 자동화 방법은?",
      "클라우드 환경 보안 고려사항은?",
      "API 보안 테스트 방법들은?",
      "보안 인증 및 컴플라이언스 준수 방법은?",
      "소프트웨어 공급망 보안 강화 방법은?",
      "보안 교육 프로그램 구성 방법은?",
      "취약점 관리 프로세스는?",
      "보안 아키텍처 설계 원칙은?",
      "데이터 유출 방지(DLP) 전략은?",
      "보안 이벤트 상관 분석 방법은?",
      "제로데이 공격 대응 방법은?",
      "보안 패치 관리 프로세스는?",
      "네트워크 세그멘테이션 전략은?",
      "보안 메트릭 정의와 측정 방법은?",
      "DevSecOps 도입 방법과 효과는?",
      "보안 위협 모델링 방법은?",
      "암호화 알고리즘 선택 기준은?",
      "보안 감사 로그 분석 방법은?",
      "침입 탐지 시스템 구축 방법은?",
      "보안 백업 및 복구 전략은?",
      "모바일 앱 보안 고려사항은?",
      "보안 인시던트 분류 체계는?",
      "권한 상승 공격 방어 방법은?",
      "보안 정책 수립 및 관리 방법은?",
      "블록체인 기술의 보안 활용은?",
      "AI/ML 시스템 보안 고려사항은?",
      "보안 자동화 도구와 활용법은?",
      "사회공학 공격 대응 방법은?",
      "보안 ROI 측정 방법은?",
      "양자 컴퓨팅 시대의 보안 대비는?"
    ]
  },
  "frontend": {
    "react": [
      "React 렌더링이 느립니다. 어떻게 최적화하나요?",
      "useState vs useReducer, 언제 무엇을 사용하나요?",
      "React.memo와 useMemo의 차이점은?",
      "Virtual DOM이 실제로 성능에 도움이 되나요?",
      "useEffect의 dependency array를 빈 배열로 두면 어떤 일이 생기나요?",
      "Custom Hook을 만드는 이유와 사용 사례는?",
      "React 18의 새로운 기능들을 설명해주세요.",
      "Suspense와 Error Boundary의 사용법은?",
      "Server Components vs Client Components의 차이는?",
      "React에서 성능 프로파일링하는 방법은?",
      "useCallback은 언제 사용해야 하나요?",
      "Context API의 성능 이슈와 해결 방법은?",
      "React에서 폼 처리 Best Practice는?",
      "Concurrent Features의 장점은?",
      "React Testing 전략을 설명해주세요.",
      "useId Hook의 사용 사례는?",
      "React DevTools 활용 팁은?",
      "포털(Portal)은 언제 사용하나요?",
      "React에서 애니메이션 구현 방법들은?",
      "Controlled vs Uncontrolled 컴포넌트 차이는?",
      "React 라우팅 Best Practice는?",
      "useDeferredValue의 사용 시나리오는?",
      "React에서 무한 스크롤 구현 방법은?",
      "컴포넌트 재사용성을 높이는 방법은?",
      "React에서 SEO 최적화 방법은?",
      "useLayoutEffect vs useEffect 차이는?",
      "React에서 데이터 fetching 패턴들은?",
      "Higher Order Component vs Render Props vs Hooks",
      "React에서 에러 로깅 전략은?",
      "useTransition Hook 활용법은?",
      "React 앱 번들 크기 줄이는 방법은?",
      "React에서 국제화(i18n) 구현 방법은?",
      "React Fiber 아키텍처의 이점은?",
      "React에서 웹 워커 활용법은?",
      "StrictMode의 역할과 사용법은?",
      "React에서 드래그 앤 드롭 구현은?",
      "컴포넌트 성능 측정 방법은?",
      "React에서 실시간 데이터 처리는?",
      "Ref 사용 Best Practice는?",
      "React에서 키보드 이벤트 처리는?",
      "컴포넌트 라이프사이클 최적화는?",
      "React에서 파일 업로드 구현은?",
      "메모이제이션 과도 사용의 문제점은?",
      "React에서 WebSocket 통합 방법은?",
      "컴포넌트 합성 패턴들은?",
      "React에서 PWA 구현 방법은?",
      "동적 import 활용법은?",
      "React에서 캐싱 전략은?",
      "컴포넌트 테스트 작성 팁은?",
      "React 보안 Best Practice는?"
    ],
    "performance": [
      "번들 사이즈가 3MB입니다. 줄이는 방법은?",
      "첫 화면 로딩이 느립니다. 개선 방법은?",
      "이미지 최적화 방법들을 설명해주세요.",
      "Code Splitting은 어떻게 구현하나요?",
      "Web Vitals 중 LCP를 개선하는 방법은?",
      "Tree Shaking이 작동하는 원리는?",
      "Lazy Loading 구현 방법과 주의사항은?",
      "웹폰트 최적화 방법은?",
      "Critical Rendering Path를 설명해주세요.",
      "리소스 힌트(Resource Hints)의 종류와 사용법은?",
      "브라우저 캐싱 전략을 설명해주세요.",
      "렌더링 성능을 측정하는 도구들은?",
      "JavaScript 번들 최적화 방법은?",
      "네트워크 요청을 줄이는 방법들은?",
      "Third-party 스크립트 최적화 방법은?",
      "FID(First Input Delay) 개선 방법은?",
      "CLS(Cumulative Layout Shift) 최소화 방법은?",
      "Service Worker 캐싱 전략은?",
      "이미지 포맷 선택 기준은?",
      "CSS 성능 최적화 기법들은?",
      "JavaScript 실행 최적화 방법은?",
      "HTTP/2와 HTTP/3의 성능 이점은?",
      "프리로드(Preload) vs 프리페치(Prefetch) 차이는?",
      "렌더링 차단 리소스 최적화는?",
      "Virtual Scrolling 구현 방법은?",
      "웹 애니메이션 성능 최적화는?",
      "메모리 누수 찾고 해결하는 방법은?",
      "Progressive Enhancement vs Graceful Degradation",
      "브라우저 렌더링 과정 최적화는?",
      "Intersection Observer API 활용법은?",
      "requestAnimationFrame 사용 시나리오는?",
      "웹 워커로 성능 개선하는 방법은?",
      "렌더링 성능 디버깅 방법은?",
      "CDN 최적화 전략은?",
      "압축 알고리즘 선택 기준은?",
      "스크립트 로딩 전략은?",
      "CSS-in-JS 성능 영향은?",
      "모바일 웹 성능 최적화는?",
      "AMP(Accelerated Mobile Pages) 장단점은?",
      "성능 예산 설정 및 모니터링은?",
      "브라우저 DevTools 성능 탭 활용법은?",
      "Long Tasks 최적화 방법은?",
      "Resource Priority 설정 방법은?",
      "폰트 로딩 최적화 전략은?",
      "이미지 스프라이트 vs 개별 이미지",
      "GPU 가속 활용 방법은?",
      "메인 스레드 작업 최적화는?",
      "성능 회귀 방지 전략은?",
      "실시간 성능 모니터링 도구는?",
      "성능 최적화 우선순위 결정은?"
    ],
    "state": [
      "Redux vs Zustand vs Jotai, 각각 언제 사용하나요?",
      "Props Drilling 문제를 해결하는 방법들은?",
      "상태 정규화(normalization)는 왜 필요한가요?",
      "Optimistic Update는 어떻게 구현하나요?",
      "전역 상태 vs 로컬 상태를 구분하는 기준은?",
      "상태 관리 라이브러리 없이 상태를 관리하는 방법은?",
      "Redux Toolkit의 장점은 무엇인가요?",
      "상태 불변성을 유지하는 이유와 방법은?",
      "서버 상태와 클라이언트 상태의 차이는?",
      "React Query(TanStack Query)의 장점은?",
      "상태 동기화 문제를 해결하는 방법은?",
      "Redux DevTools 활용법은?",
      "상태 관리 시 메모리 누수를 방지하는 방법은?",
      "Time Travel Debugging의 원리는?",
      "상태 마이그레이션 전략은?",
      "Recoil의 특징과 사용 사례는?",
      "상태 지속성(Persistence) 구현 방법은?",
      "Redux Middleware 작성 방법은?",
      "상태 구독(Subscription) 최적화는?",
      "Immer를 사용한 불변성 관리는?",
      "상태 초기화 전략은?",
      "Redux Saga vs Redux Thunk 비교",
      "상태 분할(State Slicing) 전략은?",
      "Context API 성능 최적화 방법은?",
      "상태 유효성 검증 방법은?",
      "MobX의 반응형 프로그래밍 개념은?",
      "상태 업데이트 배치 처리는?",
      "상태 변경 추적 방법은?",
      "Redux 스토어 구조 설계는?",
      "상태 관리 테스트 전략은?",
      "Valtio의 프록시 기반 상태 관리는?",
      "상태 스냅샷 관리 방법은?",
      "비동기 상태 관리 패턴은?",
      "상태 충돌 해결 전략은?",
      "Redux에서 성능 최적화 방법은?",
      "상태 암호화 및 보안은?",
      "상태 관리 디버깅 도구들은?",
      "폼 상태 관리 Best Practice는?",
      "무한 스크롤 상태 관리는?",
      "상태 기반 라우팅 구현은?",
      "Redux 액션 네이밍 컨벤션은?",
      "상태 리셋 구현 방법은?",
      "동적 리듀서 로딩은?",
      "상태 관리 안티패턴들은?",
      "XState를 사용한 상태 머신은?",
      "상태 동결(Freezing) 기법은?",
      "상태 관리 마이그레이션 가이드는?",
      "Redux 셀렉터 최적화는?",
      "상태 버전 관리 전략은?",
      "상태 관리 아키텍처 패턴은?"
    ],
    "css": [
      "CSS-in-JS vs CSS Modules의 장단점은?",
      "CSS 성능 최적화 방법들은?",
      "반응형 디자인 구현 Best Practice는?",
      "CSS Grid vs Flexbox 사용 기준은?",
      "CSS 변수(Custom Properties) 활용법은?",
      "CSS 애니메이션 성능 최적화 방법은?",
      "BEM, OOCSS, SMACSS의 차이점은?",
      "Dark Mode 구현 방법들을 비교해주세요.",
      "CSS 특이성(Specificity) 계산법은?",
      "PostCSS의 장점과 사용 사례는?",
      "CSS 번들 사이즈 최적화 방법은?",
      "CSS-in-JS 라이브러리들을 비교해주세요.",
      "Critical CSS를 추출하는 방법은?",
      "CSS Containment의 개념과 사용법은?",
      "CSS Houdini의 가능성과 현재 상태는?",
      "CSS 아키텍처 설계 원칙은?",
      "Utility-First CSS의 장단점은?",
      "CSS 전처리기 선택 기준은?",
      "CSS 네이밍 컨벤션 Best Practice는?",
      "CSS 코드 스플리팅 전략은?",
      "CSS 레이아웃 디버깅 팁은?",
      "CSS 상속과 캐스케이딩 이해하기",
      "CSS 단위(Units) 선택 가이드는?",
      "CSS 리셋 vs 노멀라이즈 차이는?",
      "CSS 프린트 스타일 작성법은?",
      "CSS Shape 활용법은?",
      "CSS Logical Properties 사용법은?",
      "CSS 최신 기능들과 브라우저 지원은?",
      "CSS 모듈화 전략은?",
      "CSS 리팩토링 방법론은?",
      "CSS 테스팅 방법들은?",
      "CSS 문서화 Best Practice는?",
      "CSS 마이그레이션 전략은?",
      "CSS 성능 프로파일링 도구는?",
      "CSS 접근성 고려사항은?",
      "CSS 국제화(i18n) 대응은?",
      "CSS 에러 처리 방법은?",
      "CSS 빌드 최적화 도구들은?",
      "CSS 디자인 시스템 구축은?",
      "CSS 협업 워크플로우는?",
      "CSS 버전 관리 전략은?",
      "CSS 보안 고려사항은?",
      "CSS 폴리필 사용 전략은?",
      "CSS 미디어 쿼리 Best Practice는?",
      "CSS 트랜지션 vs 애니메이션 선택은?",
      "CSS 크로스 브라우저 대응은?",
      "CSS 디버깅 도구와 기법은?",
      "CSS 코드 리뷰 체크리스트는?",
      "CSS 성능 메트릭은?",
      "CSS 최적화 자동화 방법은?"
    ],
    "typescript": [
      "any vs unknown vs never의 차이점은?",
      "제네릭(Generics)은 언제 사용하나요?",
      "Type vs Interface의 차이점은?",
      "타입 가드(Type Guard)의 종류와 사용법은?",
      "Utility Types들을 설명해주세요.",
      "조건부 타입(Conditional Types) 사용 사례는?",
      "타입스크립트 설정 최적화 방법은?",
      "Declaration Merging이란 무엇인가요?",
      "Mapped Types의 활용법은?",
      "타입 추론을 개선하는 방법들은?",
      "Discriminated Unions의 장점은?",
      "타입스크립트 마이그레이션 전략은?",
      "타입 안전성과 개발 생산성의 균형은?",
      "Template Literal Types 활용법은?",
      "타입스크립트 성능 이슈와 해결 방법은?",
      "타입 체크 속도 개선 방법은?",
      "타입스크립트 에러 디버깅 팁은?",
      "Namespace vs Module 차이는?",
      "타입 단언(Type Assertion) 사용 시 주의점은?",
      "타입스크립트 데코레이터 활용법은?",
      "타입 호환성(Type Compatibility) 규칙은?",
      "타입스크립트 strict 모드 활용법은?",
      "타입 정의 파일(.d.ts) 작성법은?",
      "타입스크립트 빌드 최적화는?",
      "타입 좁히기(Type Narrowing) 테크닉은?",
      "타입스크립트 테스팅 전략은?",
      "타입 레벨 프로그래밍이란?",
      "타입스크립트 모노레포 설정은?",
      "타입 안전한 API 클라이언트 만들기",
      "타입스크립트 ESLint 설정 Best Practice는?",
      "타입 체인(Type Chain) 최적화는?",
      "타입스크립트 4.0+ 새로운 기능들은?",
      "타입 생성 자동화 방법은?",
      "타입스크립트 프로젝트 구조 Best Practice는?",
      "타입 복잡도 관리 방법은?",
      "타입스크립트 에러 핸들링 패턴은?",
      "타입 재사용 전략은?",
      "타입스크립트 문서화 방법은?",
      "타입 검증 도구들은?",
      "타입스크립트 마이그레이션 도구는?",
      "타입 안전한 상태 관리는?",
      "타입스크립트 코드 생성 도구는?",
      "타입 추론 한계와 해결책은?",
      "타입스크립트 번들링 최적화는?",
      "타입 정의 충돌 해결 방법은?",
      "타입스크립트 플러그인 개발은?",
      "타입 체크 CI/CD 통합은?",
      "타입스크립트 성능 프로파일링은?",
      "타입 안전한 폼 처리는?",
      "타입스크립트 Best Practice 체크리스트는?"
    ],
    "testing": [
      "단위 테스트 vs 통합 테스트 vs E2E 테스트의 차이는?",
      "테스트 커버리지는 몇 %가 적당한가요?",
      "TDD의 장단점과 실무 적용 경험은?",
      "Mocking 전략과 Best Practice는?",
      "컴포넌트 테스트 작성 방법은?",
      "E2E 테스트 도구들을 비교해주세요.",
      "스냅샷 테스트의 장단점은?",
      "테스트 피라미드 전략을 설명해주세요.",
      "Flaky Test를 해결하는 방법은?",
      "Visual Regression Testing 도구와 방법은?",
      "테스트 데이터 관리 전략은?",
      "CI/CD에서 테스트 자동화 방법은?",
      "성능 테스트 작성 방법은?",
      "접근성 테스트 자동화 방법은?",
      "크로스 브라우저 테스트 전략은?",
      "테스트 더블(Test Double)의 종류는?",
      "테스트 격리(Test Isolation) 방법은?",
      "테스트 실행 속도 개선 방법은?",
      "테스트 유지보수성 향상 방법은?",
      "테스트 리팩토링 시기와 방법은?",
      "계약 테스트(Contract Testing) 구현은?",
      "테스트 환경 구축 Best Practice는?",
      "테스트 보고서 작성 방법은?",
      "테스트 우선순위 결정 방법은?",
      "테스트 자동 생성 도구들은?",
      "테스트 병렬 실행 전략은?",
      "테스트 데이터 시딩 방법은?",
      "테스트 코드 품질 측정은?",
      "테스트 디버깅 기법들은?",
      "테스트 문서화 전략은?",
      "API 테스트 자동화 방법은?",
      "보안 테스트 통합 방법은?",
      "테스트 메트릭 정의와 활용은?",
      "테스트 실패 분석 프로세스는?",
      "테스트 환경 프로비저닝 자동화는?",
      "테스트 코드 리뷰 체크리스트는?",
      "테스트 전략 수립 방법은?",
      "테스트 도구 선택 기준은?",
      "테스트 주도 리팩토링 방법은?",
      "테스트 커버리지 도구 비교는?",
      "테스트 안티패턴들은?",
      "테스트 자동화 ROI 계산은?",
      "테스트 파이프라인 최적화는?",
      "테스트 케이스 설계 기법은?",
      "테스트 실행 환경 관리는?",
      "테스트 버전 관리 전략은?",
      "테스트 모니터링 및 알림은?",
      "테스트 마이그레이션 전략은?",
      "테스트 교육 및 문화 정착은?",
      "테스트 자동화 프레임워크 구축은?"
    ],
    "accessibility": [
      "WCAG 2.1 AA 기준을 설명해주세요.",
      "스크린 리더 사용자를 위한 개발 팁은?",
      "키보드 네비게이션 구현 Best Practice는?",
      "ARIA 속성을 올바르게 사용하는 방법은?",
      "색상 대비를 확인하는 도구와 기준은?",
      "접근성 자동화 테스트 방법은?",
      "포커스 관리 Best Practice는?",
      "시맨틱 HTML의 중요성과 사용법은?",
      "모바일 접근성 고려사항은?",
      "다국어 지원 시 접근성 고려사항은?",
      "접근성 디버깅 도구들을 소개해주세요.",
      "Live Region 사용법과 주의사항은?",
      "접근성과 UX의 균형을 맞추는 방법은?",
      "Form 접근성 Best Practice는?",
      "접근성 감사(Audit) 프로세스는?",
      "대체 텍스트 작성 가이드라인은?",
      "접근성 레벨(A, AA, AAA) 차이는?",
      "터치 타겟 크기 가이드라인은?",
      "동적 콘텐츠 접근성 처리는?",
      "접근성 오류 우선순위 결정은?",
      "Skip Navigation 구현 방법은?",
      "접근성 테스트 체크리스트는?",
      "음성 인터페이스 접근성은?",
      "비디오/오디오 콘텐츠 접근성은?",
      "접근성 문서화 방법은?",
      "인지 접근성 고려사항은?",
      "접근성 교육 프로그램 구성은?",
      "접근성 준수 모니터링 방법은?",
      "복잡한 위젯 접근성 구현은?",
      "접근성 관련 법규 이해하기",
      "터치 제스처 대체 방법은?",
      "접근성 테스트 사용자 모집은?",
      "접근성 이슈 보고 체계는?",
      "반응형 디자인에서의 접근성은?",
      "접근성 성능 최적화는?",
      "게임 접근성 구현 방법은?",
      "차트/그래프 접근성 처리는?",
      "접근성 관련 브라우저 API는?",
      "접근성 디자인 시스템 구축은?",
      "접근성 자동화 도구 개발은?",
      "PDF 문서 접근성 개선은?",
      "이메일 접근성 Best Practice는?",
      "접근성 버그 분류 체계는?",
      "VR/AR 콘텐츠 접근성은?",
      "접근성 컨설팅 프로세스는?",
      "접근성 ROI 측정 방법은?",
      "접근성 로드맵 수립 방법은?",
      "접근성 거버넌스 체계는?",
      "접근성 혁신 사례 연구는?",
      "미래 접근성 기술 트렌드는?"
    ]
  },
  "general": {
    "programming": [
      "객체지향 프로그래밍의 SOLID 원칙을 설명해주세요.",
      "함수형 프로그래밍의 특징과 장점은?",
      "동기와 비동기 프로그래밍의 차이점은?",
      "디자인 패턴 중 자주 사용하는 것들을 설명해주세요.",
      "의존성 주입(DI)의 장점은 무엇인가요?",
      "TDD, BDD, DDD의 차이점은?",
      "리팩토링을 해야 하는 시점과 방법은?",
      "코드 리뷰 시 중점적으로 보는 것들은?",
      "기술 부채를 관리하는 방법은?",
      "페어 프로그래밍의 장단점은?",
      "코딩 컨벤션의 중요성과 적용 방법은?",
      "추상화 레벨을 결정하는 기준은?",
      "레거시 코드를 다루는 전략은?",
      "코드 품질 측정 지표들은?",
      "프로그래밍 패러다임들을 비교해주세요.",
      "알고리즘 복잡도 분석 방법은?",
      "자료구조 선택 기준은?",
      "동시성과 병렬성의 차이는?",
      "메모리 관리 Best Practice는?",
      "예외 처리 전략은?",
      "코드 최적화 원칙들은?",
      "프로그래밍 언어 선택 기준은?",
      "컴파일 언어 vs 인터프리터 언어",
      "정적 타입 vs 동적 타입의 장단점은?",
      "가비지 컬렉션의 원리는?",
      "코드 문서화 Best Practice는?",
      "네이밍 컨벤션 가이드라인은?",
      "코드 복잡도 줄이는 방법은?",
      "모듈화 설계 원칙은?",
      "API 설계 원칙들은?",
      "코드 재사용성 높이는 방법은?",
      "프로그래밍 Best Practice 체크리스트는?",
      "코드 스멜(Code Smell) 종류와 해결법은?",
      "리팩토링 카탈로그 활용법은?",
      "프로그래밍 원칙들(DRY, KISS, YAGNI)은?",
      "코드 가독성 향상 방법은?",
      "프로그래밍 패러다임 전환 경험은?",
      "멀티스레딩 프로그래밍 주의사항은?",
      "함수 설계 Best Practice는?",
      "변수 스코프 관리 방법은?",
      "코드 디버깅 전략은?",
      "프로그래밍 학습 로드맵은?",
      "오픈소스 기여 방법은?",
      "코드 보안 기본 원칙은?",
      "프로그래밍 효율성 향상 팁은?",
      "코드 버전 관리 전략은?",
      "프로그래밍 문제 해결 접근법은?",
      "코드 마이그레이션 전략은?",
      "프로그래밍 멘탈 모델은?",
      "코드 품질 자동화 도구들은?"
    ],
    "softskills": [
      "기술적 의사결정을 내리는 과정을 설명해주세요.",
      "팀원과 의견 충돌이 있을 때 해결 방법은?",
      "새로운 기술을 학습하는 방법은?",
      "업무 우선순위를 정하는 기준은?",
      "문서화의 중요성과 방법은?",
      "원격 근무 시 협업 방법은?",
      "멘토링 경험이나 받은 경험을 공유해주세요.",
      "번아웃을 예방하고 관리하는 방법은?",
      "기술 발표 준비 과정과 팁은?",
      "오픈소스 기여 경험과 얻은 것들은?",
      "실수에서 배운 가장 큰 교훈은?",
      "효과적인 회의 진행 방법은?",
      "지식 공유 문화를 만드는 방법은?",
      "개발자로서의 성장 전략은?",
      "Work-Life Balance를 유지하는 방법은?",
      "효과적인 커뮤니케이션 방법은?",
      "시간 관리 기법들은?",
      "스트레스 관리 방법은?",
      "팀 빌딩 활동 아이디어는?",
      "피드백 주고받는 방법은?",
      "갈등 해결 능력 향상 방법은?",
      "리더십 스킬 개발 방법은?",
      "창의성 향상 방법은?",
      "문제 해결 능력 기르기",
      "비판적 사고 능력 개발은?",
      "협상 스킬 향상 방법은?",
      "프레젠테이션 스킬 개선은?",
      "네트워킹 효과적으로 하는 법은?",
      "멀티태스킹 vs 집중력",
      "학습 효율 높이는 방법은?",
      "목표 설정과 달성 전략은?",
      "동기부여 유지 방법은?",
      "팀워크 향상 방법은?",
      "의사결정 프레임워크는?",
      "감정 지능 개발 방법은?",
      "적응력 향상 방법은?",
      "책임감 있는 개발자란?",
      "윤리적 딜레마 해결 방법은?",
      "다양성과 포용성 증진 방법은?",
      "혁신적 사고 기르기",
      "회복탄력성 개발 방법은?",
      "자기 인식 향상 방법은?",
      "공감 능력 개발은?",
      "설득력 있는 글쓰기는?",
      "효과적인 질문하기",
      "경청 스킬 향상 방법은?",
      "건설적 비판하는 방법은?",
      "팀 문화 개선 방법은?",
      "개인 브랜딩 전략은?",
      "커리어 전환 준비 방법은?"
    ],
    "career": [
      "좋은 개발 문화란 무엇인가요?",
      "시니어 개발자의 역할과 책임은?",
      "기술 면접을 준비하는 방법은?",
      "포트폴리오를 만들 때 중요한 점은?",
      "회사를 선택하는 기준은 무엇인가요?",
      "개발자로서 5년 후 목표는?",
      "사이드 프로젝트의 중요성은?",
      "기술 블로그를 운영하는 이유는?",
      "컨퍼런스 참여의 장점은?",
      "네트워킹의 중요성과 방법은?",
      "이직을 결정하는 기준은?",
      "연봉 협상 팁이 있다면?",
      "개발자 커뮤니티 활동의 장점은?",
      "해외 취업을 준비하는 방법은?",
      "프리랜서 vs 정규직의 장단점은?",
      "스타트업 vs 대기업 선택 기준은?",
      "기술 리더로 성장하는 방법은?",
      "개발자 커리어 패스 옵션들은?",
      "전문성 vs 제너럴리스트",
      "기술 스택 선택 전략은?",
      "개인 학습 계획 수립 방법은?",
      "멘토 찾는 방법과 활용법은?",
      "업계 트렌드 파악 방법은?",
      "개발자 평가 기준들은?",
      "승진을 위한 준비 사항은?",
      "팀 리더 역할 준비 방법은?",
      "기술 부채와 커리어 영향은?",
      "오픈소스 활동과 커리어는?",
      "개발자 자격증의 가치는?",
      "글로벌 개발자로 성장하기",
      "창업을 준비하는 개발자는?",
      "은퇴 후 계획 수립은?",
      "개발자 복지의 중요성은?",
      "원격 근무 커리어 전략은?",
      "개발자 번아웃 극복 방법은?",
      "커리어 전환 시 고려사항은?",
      "개발자 연차별 성장 전략은?",
      "기술 변화에 대응하는 방법은?",
      "개발자 커뮤니티 만들기",
      "강의/교육 활동의 장점은?",
      "개발자 책 쓰기 경험은?",
      "컨설턴트로 전향하는 방법은?",
      "CTO가 되는 길은?",
      "개발자 인플루언서 되기",
      "은퇴 준비 재정 계획은?",
      "개발자 건강 관리 방법은?",
      "가족과 커리어 균형은?",
      "개발자 법적 이슈 대응은?",
      "글로벌 팀에서 일하기",
      "개발자 세금 절세 전략은?"
    ]
  }
}